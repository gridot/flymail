swagger: "2.0"
info:
  description: "API documentation for Flymail, project for learning and sending mail."
  version: "1.0.0"
  title: "Flymail"
  termsOfService: "http://swagger.io/terms/"
  contact:
    github: "https://github.com/gridot/flymail/issues"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "http://localhost:5040"
basePath: "/api/v1"
tags:
- name: "Users"
  description: "User API Endpoint"
- name: "Parcels"
  description: "parcel API Endpoint"
schemes:
- "https"
- "http"
paths:
  /auth/signup:
    post:
      tags:
        - "Users"
      summary: "Create a new user"
      description: "Create a new user on Flymail"
      operationId: "userSignup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "user"
          description: "Create a new user account"
          required: true
          schema:
            $ref: "#/definitions/Users"
      responses:
        201:
          description: "Sign up is successful"
        400:
          description: "Please make sure to input correct values"
        500:
          description: "Internal Server Error"
  /auth/login:
    post:
      tags:
        - "Users"
      summary: "Login a user"
      description: "Login an existing user into Flymail"
      operationId: "userLogin"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "user"
          description: "Login existing user"
          required: true
          schema:
            $ref: "#/definitions/Users"
      responses:
        200:
          description: "Welcome back user name"
        400:
          description: "Please make sure to input correct values"
  /parcels:
    post:
      tags:
        - "Parcels"
      summary: "Post a parcel"
      description: "Create a parcel"
      operationId: "parcelOrders"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "parcel"
          description: "Post a parcel on flymail"
          required: true
          schema:
            $ref: "#/definitions/Parcels"
        - in: "query"
          name: "token"
          description: "Provide a token to access this endpoint"
          required: true
          type: "string"
      responses:
        200:
          description: "Your order was placed successfully"
        400:
          description: "Please make sure to input correct values"
    get:
      tags:
        - "parcels"
      summary: "Get all parcels on Flymail"
      description: "Get all parcels"
      operationId: "getAllOrders"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "token"
          description: "Provide to token to access this endpoint"
          required: true
          type: "string"
      responses:
        200:
          description: "All orders placed as of date"
  /users/{user_id}/parcels:
    get:
      tags:
        - "Parcels"
      summary: "Get specific user parcels"
      description: "Get user specific parcels"
      operationId: "getUserOrders"
      produces:
        - "application/json"
      parameters:
        - name: "user_id"
          in: "path"
          description: "Id of the specific user"
          required: true
          type: "integer"
        - in: "query"
          name: "token"
          description: "Provide a token to access this endpoint"
          required: true
          type: "string"
      responses:
        200:
          description: "All orders placed as of date"
  /parcels/{trackingID}:
    get:
      tags:
        - "Parcels"
      summary: "Get specific parcel"
      description: "Get specific parcel"
      operationId: "getSpecificOrder"
      produces:
        - "application/json"
      parameters:
        - name: "order_id"
          in: "path"
          description: "Id of the specific order"
          required: true
          type: "integer"
        - in: "query"
          name: "token"
          description: "Provide a token to access this endpoint"
          required: true
          type: "string"
      responses:
        200:
          description: "Order with this ID"
        400:
          description: "invalid tracking ID"
        404:
          description: "This parcel order does not exist"
  /parcels/{parcelId}/status:
    put:
      tags:
        - "Parcels"
      summary: "change status of a parcel"
      description: "Update the order status"
      operationId: "updateStatus"
      produces:
        - "application/json"
      parameters:
        - name: "parcelId"
          in: "path"
          description: "Id of the parcel to update"
          required: true
          type: "integer"
        - in: "query"
          name: "token"
          description: "Provide a token to access this endpoint"
          required: true
          type: "string"
          schema:
            $ref: "#/definitions/Parcels"
      responses:
        200:
          description: "Order is updated"
        400:
          description: "Invalid URL. Invalid parcelId"
        404:
          description: "This parcel order does not exist"
 /parcels/{parcelId}/destination:
    put:
      tags:
        - "Parcels"
      summary: "change destination of a parcel"
      description: "Update the order destination"
      operationId: "destination"
      produces:
        - "application/json"
      parameters:
        - name: "parcelId"
          in: "path"
          description: "Id of the parcel to update"
          required: true
          type: "integer"
        - in: "query"
          name: "token"
          description: "Provide a token to access this endpoint"
          required: true
          type: "string"
          schema:
            $ref: "#/definitions/Parcels"
      responses:
        200:
          description: "Order is updated"
        400:
          description: "Invalid URL. Invalid parcelId"
        404:
          description: "This parcel order does not exist"         
  /parcels/{parcelId}/cancel:
    put:
      tags:
        - "Parcels"
      summary: "cancel sepcific parcel order"
      description: "Update  parcel status to cancelled"
      operationId: "cancelUserOrder"
      produces:
        - "application/json"
      parameters:
        - name: "parcelId"
          in: "path"
          description: "Id of the specific parcel to be cancelled"
          required: true
          type: "integer"
        - in: "query"
          name: "token"
          description: "Provide a token to access this endpoint"
          required: true
          type: "string"
          schema:
            $ref: "#/definitions/Parcels"
      responses:
        200:
          description: "This order is cancelled"
        400:
          description: "Invalid URL. Invalid parcelId"
        404:
          description: "This parcel order does not exist"
  /parcels/{parcelId}/presentLocation:
    put:
      tags:
        - "Parcels"
      summary: "Change location of specific order"
      description: "Update the parcel location"
      operationId: "location"
      produces:
        - "application/json"
      parameters:
        - name: "parcelId"
          in: "path"
          description: "Id of the specific order to be updated"
          required: true
          type: "integer"
        - name: "token"
          in: "query"
          description: "Provide a token to access this endpoint"
          required: true
          type: "string"
          schema:
            $ref: "#/definitions/Parcels"
      responses:
        200:
          description: "Order is updated"
        400:
          description: "Invalid URL. Invalid parcelId"
        404:
          description: "This parcel order does not exist"
definitions:
  userSignup:
    type: "object"
    required:
      - firstName
      - lastName
      - email     - 
      - pasword
    properties:
      lastName:
        type: "string"
        uniqueItems: false
      lastName:
        type: "string"
        uniqueItems: false
      email:
        type: "string"
        uniqueItems: true
      password:
        type: "string"
        uniqueItems: false
  userLogin:
    type: "object"
    required:
      - email
      - password
    properties:
      email:
        type: "string"
        uniqueItems: true
      password:
        type: "string"
        uniqueItems: true
  Parcels:
    type: "object"
    required:
      - parcelContent
      - weight
      - metric
      - pickupLocation
      - destination
      - receiver
      - email
      - phoneNumber
    properties:
      parcelContent:
        type: "string"
        uniqueItems: false
      weight:
        type: "integer"
        uniqueItems: false
      metric:
        type: "string"
        uniqueItems: false
      pickupLocation:
        type: "string"
        unique: false  
       destination:
        type: "string"
        uniqueItems: false 
       receiver:
        type: "string"
        uniqueItems: false
      email:
        type: "string"
        uniqueItems: false
      phoneNumber:
        type: "number"
        uniqueItems: false
